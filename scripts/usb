#!/bin/bash
devices=$(lsblk -no path,label,type,mountpoint)
removable=$(
  echo -e "$devices" |
    grep -P "sd.\d .*part .+$" |
    awk '{print $1 " " $2}'
)
mountable=$(
  echo -e "$devices" |
    grep -P "sd.\d.*part $" |
    awk '{print $1 " " $2}'
)
[ "$removable" != "" ] && options+="\nRemove"
[ "$mountable" != "" ] && options+="\nMount"
[ "$options" = "" ] && exit

echo "Removable: [$removable]"
echo "Mountable: [$mountable]"
echo "Options: [$options]"

option=$(dmenu "USB: " "${options:2}")
[ "$option" = "" ] && exit
mountpoint=/run/media/alejo

partitions=$(
  [ "$option" = "Mount" ] &&
    echo -e "$mountable" ||
    echo -e "$removable"
)
echo "Partitions: $partitions"

device=$(dmenu "USB: " "$partitions")
[ "$device" = "" ] && exit

device_path=$(echo "$device" | awk '{print $1}')
device_label=$(echo "$device" | awk '{print $2}')

case "$option" in
Mount)
  if udisksctl mount -b "$device_path" 2>/dev/null; then
    # Get the mount point
    mountpoint=$(lsblk -no MOUNTPOINT "$device_path" | grep -v '^$')

    notify-send -i "drive-removable-media" \
      "USB Mounted" \
      "Device $device_label mounted at $mountpoint"

    # Open file manager (optional)
    # thunar "$mountpoint" &
  else
    notify-send -i "dialog-error" \
      "Mount Failed" \
      "Could not mount $device_label"
  fi
  ;;
Remove)
  if udisksctl unmount -b "$device_path" 2>/dev/null; then
    notify-send -i "drive-removable-media" \
      "USB Safely Removed" \
      "Device $device_label unmounted and can be safely removed"
  else
    notify-send -i "dialog-error" \
      "Unmount Failed" \
      "Could not unmount $device_label (device may be busy)"
  fi
  ;;
Format) ;;
Bootable) ;;
esac

# ~/dotfiles/scripts/usb-options/format
# ~/dotfiles/scripts/usb-options/bootable
